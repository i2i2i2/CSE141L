$date
	Sat May  6 02:30:51 2017
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module AccumulatorRegs_tb $end
$var wire 8 ! acc3 [7:0] $end
$var wire 8 " acc2 [7:0] $end
$var wire 8 # acc1 [7:0] $end
$var reg 1 $ CLK $end
$var reg 1 % isWrite $end
$var reg 3 & read1 [2:0] $end
$var reg 3 ' read2 [2:0] $end
$var reg 8 ( writeData [7:0] $end
$var reg 3 ) writeReg [2:0] $end
$scope module testAccReg $end
$var wire 1 $ CLK $end
$var wire 8 * acc1 [7:0] $end
$var wire 8 + acc2 [7:0] $end
$var wire 8 , acc3 [7:0] $end
$var wire 1 % isWrite $end
$var wire 3 - read1 [2:0] $end
$var wire 3 . read2 [2:0] $end
$var wire 8 / writeData [7:0] $end
$var wire 3 0 writeReg [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
x%
x$
bx #
bx "
bx !
$end
#50
0$
#100
1$
b10101010 (
b10101010 /
b0 )
b0 0
0%
b0 &
b0 -
#150
0$
#200
b10101010 #
b10101010 *
1$
1%
#250
0$
#300
b11110000 #
b11110000 *
1$
b11110000 (
b11110000 /
#350
0$
#400
b1111 "
b1111 +
1$
b1111 (
b1111 /
b10 )
b10 0
b10 '
b10 .
#450
0$
#500
1$
b0 (
b0 /
0%
#550
0$
#600
1$
b11111111 #
b11111111 *
b1 &
b1 -
b11111111 (
b11111111 /
1%
b1 )
b1 0
#650
0$
#700
b10101010 !
b10101010 ,
1$
b10101010 "
b10101010 +
b101 '
b101 .
b10101010 (
b10101010 /
b101 )
b101 0
#750
0$
#800
1$
b11110000 #
b11110000 *
b0 &
b0 -
